<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cti.user.model.userDAO">
	<resultMap type="cti.user.model.userDTO" id="userResultMap">
		<result property="user_no" column="user_no" />
		<result property="user_id" column="user_id " />
		<result property="user_pass" column="user_pass" />
	</resultMap>
<!-- 	<select id="namelist" resultMap="userResultMap"> -->
 
<!--         <![CDATA[ SELECT empl_name,dept_name,comp_tenr,work_tenr FROM VW_USER_INFO_CTI WHERE EMPL_NAME LIKE '%'||#{empl_name}||'%']]> -->
	
<!-- 	</select> -->
<!-- 	<select id="get_comp_tenr" resultMap="userResultMap"> -->
 
<!--         SELECT comp_tenr FROM VW_USER_INFO_CTI WHERE emp_id = #{emp_id} -->
	
<!-- 	</select> -->
<!-- 	<insert id="insert_kakao" parameterType="map"> -->
<!-- 		INSERT INTO TABMNG_TALK  (			 -->
<!--                        CMP_MSG_ID, MSG_GB, WRT_DTTM, SND_DTTM, SND_PHN_ID, RCV_PHN_ID, CALLBACK, TEMPLATE_CD, KPLUS_ID -->
<!--                        , SND_MSG, SND_DATA, SMS_ST, RSLT_VAL, CASE_NO, ORG_CD, EMP_ID, UP_CD			 -->
<!--                        )			 -->
<!--      	VALUES (		 -->
<!-- 			(SELECT FN_TABMNG_TALK_ID@LIMS_SMS_LINK(SYSDATE) FROM DUAL)		 -->
<!-- 			, 'K'		 -->
<!-- 			, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')			 -->
<!-- 			, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')		 -->
<!-- 			, ''		 -->
<!-- 			, REPLACE(#{cust_num},'-','')	 -->
<!-- 			, '054-810-0132'			 -->
<!-- 			, 'KLAC9001'			 -->
<!-- 			,'@대한법률구조공단'			 -->
<!-- 			,'[법률구조공단] 고객님, 예약하기 버튼을 클릭하시면 예약이 가능합니다.'			 -->
<!-- 			, ''		 -->
<!-- 	        , '0'			 -->
<!-- 	        , '99'			 -->
<!-- 	        , '2999민가00001'			 -->
<!-- 	        , '11000'			 -->
<!-- 	        , '199901010003'			 -->
<!--                        )			 -->
<!-- 	</insert> -->
	
	<insert id="insert_member" parameterType="map">
		INSERT INTO MEMBER 
		(
			user_id,
			user_pass,
			user_name,
			user_birth,
			user_phone
		) 
		VALUES 
		(
			#{user_id},
			#{user_pass},
			#{user_name},
			#{user_birth},
			#{user_phone}
		)
	</insert>
	
	<select id="select_member" parameterType="map" resultType="int">
 
		SELECT COUNT(*) FROM MEMBER WHERE user_id = #{user_id}
	
	</select>
	<select id="select_member_pass_check" parameterType="map" resultType="int">
 
		SELECT 
			COUNT(*) 
		FROM MEMBER 
		WHERE 
			user_id = #{user_id} 
		AND user_pass = #{user_pass} 
	
	</select>	
	<select id="select_member_id_information_check" parameterType="map" resultMap="userResultMap">
 
		SELECT 
			user_id
		FROM MEMBER 
		WHERE 
			user_name = #{user_name} 
		AND user_birth = #{user_birth}
		AND user_phone = #{user_phone} 
	
	</select>
	
	<!-- 시작20220803 추가 -->
	<!-- 결과 값이 여러개 있을 때 : size > 1 -->
	<!-- 쿼리 내용 중에  "as"는 별칭을 의미함, 실제로 값을 가져올때 저 이름으로 가져온다는 뜻 	 -->
	<select id="selectListTest" parameterType="Map" resultType="hashMap">
	
		SELECT 
			user_id as userId ,
			user_pass as userPass,
			user_name as userName,
			user_birth as userBirth,
			user_phone as userPhone
		FROM MEMBER 
		WHERE 1=1
	</select>
	
	<!-- 결과 값이 하나있을 때 : size = 1-->
	<select id="selectOneTest" resultType="hashMap">
		SELECT 
			user_id as userId ,
			user_pass as userPass,
			user_name as userName,
			user_birth as userBirth,
			user_phone as userPhone
		FROM MEMBER 
		WHERE 
			user_name = #{user_name} 
		AND user_birth = #{user_birth}
		AND user_phone = #{user_phone} 
	</select>
	<!-- 끝 -->
	
	<update id="update_member_pass" parameterType="map">
		UPDATE MEMBER
		 
		SET 
			user_pass = #{user_pass}
			
		WHERE user_id = #{user_id}
		AND user_name = #{user_name}
		AND user_birth = #{user_birth}
		AND user_phone = #{user_phone}
			
	</update>
</mapper>